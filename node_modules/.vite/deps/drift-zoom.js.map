{
  "version": 3,
  "sources": ["../../drift-zoom/src/js/util/dom.js", "../../drift-zoom/src/js/injectBaseStylesheet.js", "../../drift-zoom/src/js/util/throwIfMissing.js", "../../drift-zoom/src/js/BoundingBox.js", "../../drift-zoom/src/js/Trigger.js", "../../drift-zoom/src/js/ZoomPane.js", "../../drift-zoom/src/js/Drift.js"],
  "sourcesContent": ["// This is not really a perfect check, but works fine.\n// From http://stackoverflow.com/questions/384286\nconst HAS_DOM_2 = typeof HTMLElement === \"object\";\n\nexport function isDOMElement(obj) {\n  return HAS_DOM_2\n    ? obj instanceof HTMLElement\n    : obj && typeof obj === \"object\" && obj !== null && obj.nodeType === 1 && typeof obj.nodeName === \"string\";\n}\n\nexport function addClasses(el, classNames) {\n  classNames.forEach(function (className) {\n    el.classList.add(className);\n  });\n}\n\nexport function removeClasses(el, classNames) {\n  classNames.forEach(function (className) {\n    el.classList.remove(className);\n  });\n}\n", "/* UNMINIFIED RULES\n\nconst RULES = `\n@keyframes noop {\n  0% { zoom: 1; }\n}\n\n@-webkit-keyframes noop {\n  0% { zoom: 1; }\n}\n\n.drift-zoom-pane.drift-open {\n  display: block;\n}\n\n.drift-zoom-pane.drift-opening, .drift-zoom-pane.drift-closing {\n  animation: noop 1ms;\n  -webkit-animation: noop 1ms;\n}\n\n.drift-zoom-pane {\n  position: absolute;\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  pointer-events: none;\n}\n\n.drift-zoom-pane-loader {\n  display: none;\n}\n\n.drift-zoom-pane img {\n  position: absolute;\n  display: block;\n  max-width: none;\n  max-height: none;\n}\n\n.drift-bounding-box {\n  position: absolute;\n  pointer-events: none;\n}\n`;\n\n*/\n\nconst RULES =\n  \".drift-bounding-box,.drift-zoom-pane{position:absolute;pointer-events:none}@keyframes noop{0%{zoom:1}}@-webkit-keyframes noop{0%{zoom:1}}.drift-zoom-pane.drift-open{display:block}.drift-zoom-pane.drift-closing,.drift-zoom-pane.drift-opening{animation:noop 1ms;-webkit-animation:noop 1ms}.drift-zoom-pane{overflow:hidden;width:100%;height:100%;top:0;left:0}.drift-zoom-pane-loader{display:none}.drift-zoom-pane img{position:absolute;display:block;max-width:none;max-height:none}\";\n\nexport default function injectBaseStylesheet() {\n  if (document.querySelector(\".drift-base-styles\")) {\n    return;\n  }\n\n  const styleEl = document.createElement(\"style\");\n  styleEl.type = \"text/css\";\n  styleEl.classList.add(\"drift-base-styles\");\n\n  styleEl.appendChild(document.createTextNode(RULES));\n\n  const head = document.head;\n  head.insertBefore(styleEl, head.firstChild);\n}\n", "export default function throwIfMissing() {\n  throw new Error(\"Missing parameter\");\n}\n", "import throwIfMissing from \"./util/throwIfMissing\";\nimport { addClasses, removeClasses } from \"./util/dom\";\n\nexport default class BoundingBox {\n  constructor(options) {\n    this.isShowing = false;\n\n    const { namespace = null, zoomFactor = throwIfMissing(), containerEl = throwIfMissing() } = options;\n\n    this.settings = { namespace, zoomFactor, containerEl };\n\n    this.openClasses = this._buildClasses(\"open\");\n\n    this._buildElement();\n  }\n\n  _buildClasses(suffix) {\n    const classes = [`drift-${suffix}`];\n\n    const ns = this.settings.namespace;\n    if (ns) {\n      classes.push(`${ns}-${suffix}`);\n    }\n\n    return classes;\n  }\n\n  _buildElement() {\n    this.el = document.createElement(\"div\");\n    addClasses(this.el, this._buildClasses(\"bounding-box\"));\n  }\n\n  show(zoomPaneWidth, zoomPaneHeight) {\n    this.isShowing = true;\n\n    this.settings.containerEl.appendChild(this.el);\n\n    const style = this.el.style;\n    style.width = `${Math.round(zoomPaneWidth / this.settings.zoomFactor)}px`;\n    style.height = `${Math.round(zoomPaneHeight / this.settings.zoomFactor)}px`;\n\n    addClasses(this.el, this.openClasses);\n  }\n\n  hide() {\n    if (this.isShowing) {\n      this.settings.containerEl.removeChild(this.el);\n    }\n\n    this.isShowing = false;\n\n    removeClasses(this.el, this.openClasses);\n  }\n\n  setPosition(percentageOffsetX, percentageOffsetY, triggerRect) {\n    const pageXOffset = window.pageXOffset;\n    const pageYOffset = window.pageYOffset;\n\n    let inlineLeft = triggerRect.left + percentageOffsetX * triggerRect.width - this.el.clientWidth / 2 + pageXOffset;\n    let inlineTop = triggerRect.top + percentageOffsetY * triggerRect.height - this.el.clientHeight / 2 + pageYOffset;\n\n    if (inlineLeft < triggerRect.left + pageXOffset) {\n      inlineLeft = triggerRect.left + pageXOffset;\n    } else if (inlineLeft + this.el.clientWidth > triggerRect.left + triggerRect.width + pageXOffset) {\n      inlineLeft = triggerRect.left + triggerRect.width - this.el.clientWidth + pageXOffset;\n    }\n\n    if (inlineTop < triggerRect.top + pageYOffset) {\n      inlineTop = triggerRect.top + pageYOffset;\n    } else if (inlineTop + this.el.clientHeight > triggerRect.top + triggerRect.height + pageYOffset) {\n      inlineTop = triggerRect.top + triggerRect.height - this.el.clientHeight + pageYOffset;\n    }\n\n    this.el.style.left = `${inlineLeft}px`;\n    this.el.style.top = `${inlineTop}px`;\n  }\n}\n", "import throwIfMissing from \"./util/throwIfMissing\";\nimport BoundingBox from \"./BoundingBox\";\n\nexport default class Trigger {\n  constructor(options = {}) {\n    this._show = this._show.bind(this);\n    this._hide = this._hide.bind(this);\n    this._handleEntry = this._handleEntry.bind(this);\n    this._handleMovement = this._handleMovement.bind(this);\n\n    const {\n      el = throwIfMissing(),\n      zoomPane = throwIfMissing(),\n      sourceAttribute = throwIfMissing(),\n      handleTouch = throwIfMissing(),\n      onShow = null,\n      onHide = null,\n      hoverDelay = 0,\n      touchDelay = 0,\n      hoverBoundingBox = throwIfMissing(),\n      touchBoundingBox = throwIfMissing(),\n      namespace = null,\n      zoomFactor = throwIfMissing(),\n      boundingBoxContainer = throwIfMissing(),\n      passive = false,\n    } = options;\n\n    this.settings = {\n      el,\n      zoomPane,\n      sourceAttribute,\n      handleTouch,\n      onShow,\n      onHide,\n      hoverDelay,\n      touchDelay,\n      hoverBoundingBox,\n      touchBoundingBox,\n      namespace,\n      zoomFactor,\n      boundingBoxContainer,\n      passive,\n    };\n\n    if (this.settings.hoverBoundingBox || this.settings.touchBoundingBox) {\n      this.boundingBox = new BoundingBox({\n        namespace: this.settings.namespace,\n        zoomFactor: this.settings.zoomFactor,\n        containerEl: this.settings.boundingBoxContainer,\n      });\n    }\n\n    this.enabled = true;\n\n    this._bindEvents();\n  }\n\n  get isShowing() {\n    return this.settings.zoomPane.isShowing;\n  }\n\n  _preventDefault(event) {\n    event.preventDefault();\n  }\n\n  _preventDefaultAllowTouchScroll(event) {\n    if (!this.settings.touchDelay || !this._isTouchEvent(event) || this.isShowing) {\n      event.preventDefault();\n    }\n  }\n\n  _isTouchEvent(event) {\n    return !!event.touches;\n  }\n\n  _bindEvents() {\n    this.settings.el.addEventListener(\"mouseenter\", this._handleEntry);\n    this.settings.el.addEventListener(\"mouseleave\", this._hide);\n    this.settings.el.addEventListener(\"mousemove\", this._handleMovement);\n\n    const isPassive = { passive: this.settings.passive };\n    if (this.settings.handleTouch) {\n      this.settings.el.addEventListener(\"touchstart\", this._handleEntry, isPassive);\n      this.settings.el.addEventListener(\"touchend\", this._hide);\n      this.settings.el.addEventListener(\"touchmove\", this._handleMovement, isPassive);\n    } else {\n      this.settings.el.addEventListener(\"touchstart\", this._preventDefault, isPassive);\n      this.settings.el.addEventListener(\"touchend\", this._preventDefault);\n      this.settings.el.addEventListener(\"touchmove\", this._preventDefault, isPassive);\n    }\n  }\n\n  _unbindEvents() {\n    this.settings.el.removeEventListener(\"mouseenter\", this._handleEntry);\n    this.settings.el.removeEventListener(\"mouseleave\", this._hide);\n    this.settings.el.removeEventListener(\"mousemove\", this._handleMovement);\n\n    if (this.settings.handleTouch) {\n      this.settings.el.removeEventListener(\"touchstart\", this._handleEntry);\n      this.settings.el.removeEventListener(\"touchend\", this._hide);\n      this.settings.el.removeEventListener(\"touchmove\", this._handleMovement);\n    } else {\n      this.settings.el.removeEventListener(\"touchstart\", this._preventDefault);\n      this.settings.el.removeEventListener(\"touchend\", this._preventDefault);\n      this.settings.el.removeEventListener(\"touchmove\", this._preventDefault);\n    }\n  }\n\n  _handleEntry(e) {\n    this._preventDefaultAllowTouchScroll(e);\n    this._lastMovement = e;\n\n    if (e.type == \"mouseenter\" && this.settings.hoverDelay) {\n      this.entryTimeout = setTimeout(this._show, this.settings.hoverDelay);\n    } else if (this.settings.touchDelay) {\n      this.entryTimeout = setTimeout(this._show, this.settings.touchDelay);\n    } else {\n      this._show();\n    }\n  }\n\n  _show() {\n    if (!this.enabled) {\n      return;\n    }\n\n    const onShow = this.settings.onShow;\n    if (onShow && typeof onShow === \"function\") {\n      onShow();\n    }\n\n    this.settings.zoomPane.show(\n      this.settings.el.getAttribute(this.settings.sourceAttribute),\n      this.settings.el.clientWidth,\n      this.settings.el.clientHeight\n    );\n\n    if (this._lastMovement) {\n      const touchActivated = this._lastMovement.touches;\n      if ((touchActivated && this.settings.touchBoundingBox) || (!touchActivated && this.settings.hoverBoundingBox)) {\n        this.boundingBox.show(this.settings.zoomPane.el.clientWidth, this.settings.zoomPane.el.clientHeight);\n      }\n    }\n\n    this._handleMovement();\n  }\n\n  _hide(e) {\n    if (e) {\n      this._preventDefaultAllowTouchScroll(e);\n    }\n\n    this._lastMovement = null;\n\n    if (this.entryTimeout) {\n      clearTimeout(this.entryTimeout);\n    }\n\n    if (this.boundingBox) {\n      this.boundingBox.hide();\n    }\n\n    const onHide = this.settings.onHide;\n    if (onHide && typeof onHide === \"function\") {\n      onHide();\n    }\n\n    this.settings.zoomPane.hide();\n  }\n\n  _handleMovement(e) {\n    if (e) {\n      this._preventDefaultAllowTouchScroll(e);\n      this._lastMovement = e;\n    } else if (this._lastMovement) {\n      e = this._lastMovement;\n    } else {\n      return;\n    }\n\n    let movementX;\n    let movementY;\n\n    if (e.touches) {\n      const firstTouch = e.touches[0];\n      movementX = firstTouch.clientX;\n      movementY = firstTouch.clientY;\n    } else {\n      movementX = e.clientX;\n      movementY = e.clientY;\n    }\n\n    const el = this.settings.el;\n    const rect = el.getBoundingClientRect();\n    const offsetX = movementX - rect.left;\n    const offsetY = movementY - rect.top;\n\n    const percentageOffsetX = offsetX / this.settings.el.clientWidth;\n    const percentageOffsetY = offsetY / this.settings.el.clientHeight;\n\n    if (this.boundingBox) {\n      this.boundingBox.setPosition(percentageOffsetX, percentageOffsetY, rect);\n    }\n\n    this.settings.zoomPane.setPosition(percentageOffsetX, percentageOffsetY, rect);\n  }\n}\n", "import throwIfMissing from \"./util/throwIfMissing\";\nimport { addClasses, removeClasses } from \"./util/dom\";\n\nexport default class ZoomPane {\n  constructor(options = {}) {\n    // All officially-supported browsers have this, but it's easy to\n    // account for, just in case.\n    this.HAS_ANIMATION = false;\n    if (typeof document !== \"undefined\") {\n      const divStyle = document.createElement(\"div\").style;\n      this.HAS_ANIMATION = \"animation\" in divStyle || \"webkitAnimation\" in divStyle;\n    }\n\n    this._completeShow = this._completeShow.bind(this);\n    this._completeHide = this._completeHide.bind(this);\n    this._handleLoad = this._handleLoad.bind(this);\n\n    this.isShowing = false;\n\n    const {\n      container = null,\n      zoomFactor = throwIfMissing(),\n      inline = throwIfMissing(),\n      namespace = null,\n      showWhitespaceAtEdges = throwIfMissing(),\n      containInline = throwIfMissing(),\n      inlineOffsetX = 0,\n      inlineOffsetY = 0,\n      inlineContainer = document.body,\n    } = options;\n\n    this.settings = {\n      container,\n      zoomFactor,\n      inline,\n      namespace,\n      showWhitespaceAtEdges,\n      containInline,\n      inlineOffsetX,\n      inlineOffsetY,\n      inlineContainer,\n    };\n\n    this.openClasses = this._buildClasses(\"open\");\n    this.openingClasses = this._buildClasses(\"opening\");\n    this.closingClasses = this._buildClasses(\"closing\");\n    this.inlineClasses = this._buildClasses(\"inline\");\n    this.loadingClasses = this._buildClasses(\"loading\");\n\n    this._buildElement();\n  }\n\n  _buildClasses(suffix) {\n    const classes = [`drift-${suffix}`];\n\n    const ns = this.settings.namespace;\n    if (ns) {\n      classes.push(`${ns}-${suffix}`);\n    }\n\n    return classes;\n  }\n\n  _buildElement() {\n    this.el = document.createElement(\"div\");\n    addClasses(this.el, this._buildClasses(\"zoom-pane\"));\n\n    const loaderEl = document.createElement(\"div\");\n    addClasses(loaderEl, this._buildClasses(\"zoom-pane-loader\"));\n    this.el.appendChild(loaderEl);\n\n    this.imgEl = document.createElement(\"img\");\n    this.el.appendChild(this.imgEl);\n  }\n\n  _setImageURL(imageURL) {\n    this.imgEl.setAttribute(\"src\", imageURL);\n  }\n\n  _setImageSize(triggerWidth, triggerHeight) {\n    this.imgEl.style.width = `${triggerWidth * this.settings.zoomFactor}px`;\n    this.imgEl.style.height = `${triggerHeight * this.settings.zoomFactor}px`;\n  }\n\n  // `percentageOffsetX` and `percentageOffsetY` must be percentages\n  // expressed as floats between `0' and `1`.\n  setPosition(percentageOffsetX, percentageOffsetY, triggerRect) {\n    const imgElWidth = this.imgEl.offsetWidth;\n    const imgElHeight = this.imgEl.offsetHeight;\n    const elWidth = this.el.offsetWidth;\n    const elHeight = this.el.offsetHeight;\n\n    const centreOfContainerX = elWidth / 2;\n    const centreOfContainerY = elHeight / 2;\n\n    const targetImgXToBeCentre = imgElWidth * percentageOffsetX;\n    const targetImgYToBeCentre = imgElHeight * percentageOffsetY;\n\n    let left = centreOfContainerX - targetImgXToBeCentre;\n    let top = centreOfContainerY - targetImgYToBeCentre;\n\n    const differenceBetweenContainerWidthAndImgWidth = elWidth - imgElWidth;\n    const differenceBetweenContainerHeightAndImgHeight = elHeight - imgElHeight;\n    const isContainerLargerThanImgX = differenceBetweenContainerWidthAndImgWidth > 0;\n    const isContainerLargerThanImgY = differenceBetweenContainerHeightAndImgHeight > 0;\n\n    const minLeft = isContainerLargerThanImgX ? differenceBetweenContainerWidthAndImgWidth / 2 : 0;\n    const minTop = isContainerLargerThanImgY ? differenceBetweenContainerHeightAndImgHeight / 2 : 0;\n\n    const maxLeft = isContainerLargerThanImgX\n      ? differenceBetweenContainerWidthAndImgWidth / 2\n      : differenceBetweenContainerWidthAndImgWidth;\n    const maxTop = isContainerLargerThanImgY\n      ? differenceBetweenContainerHeightAndImgHeight / 2\n      : differenceBetweenContainerHeightAndImgHeight;\n\n    if (this.el.parentElement === this.settings.inlineContainer) {\n      // This may be needed in the future to deal with browser event\n      // inconsistencies, but it's difficult to tell for sure.\n      // let scrollX = isTouch ? 0 : window.scrollX;\n      // let scrollY = isTouch ? 0 : window.scrollY;\n      const scrollX = window.pageXOffset;\n      const scrollY = window.pageYOffset;\n\n      let inlineLeft =\n        triggerRect.left + percentageOffsetX * triggerRect.width - elWidth / 2 + this.settings.inlineOffsetX + scrollX;\n      let inlineTop =\n        triggerRect.top + percentageOffsetY * triggerRect.height - elHeight / 2 + this.settings.inlineOffsetY + scrollY;\n\n      if (this.settings.containInline) {\n        if (inlineLeft < triggerRect.left + scrollX) {\n          inlineLeft = triggerRect.left + scrollX;\n        } else if (inlineLeft + elWidth > triggerRect.left + triggerRect.width + scrollX) {\n          inlineLeft = triggerRect.left + triggerRect.width - elWidth + scrollX;\n        }\n\n        if (inlineTop < triggerRect.top + scrollY) {\n          inlineTop = triggerRect.top + scrollY;\n        } else if (inlineTop + elHeight > triggerRect.top + triggerRect.height + scrollY) {\n          inlineTop = triggerRect.top + triggerRect.height - elHeight + scrollY;\n        }\n      }\n\n      this.el.style.left = `${inlineLeft}px`;\n      this.el.style.top = `${inlineTop}px`;\n    }\n\n    if (!this.settings.showWhitespaceAtEdges) {\n      if (left > minLeft) {\n        left = minLeft;\n      } else if (left < maxLeft) {\n        left = maxLeft;\n      }\n\n      if (top > minTop) {\n        top = minTop;\n      } else if (top < maxTop) {\n        top = maxTop;\n      }\n    }\n\n    this.imgEl.style.transform = `translate(${left}px, ${top}px)`;\n    this.imgEl.style.webkitTransform = `translate(${left}px, ${top}px)`;\n  }\n\n  get _isInline() {\n    const inline = this.settings.inline;\n\n    return inline === true || (typeof inline === \"number\" && window.innerWidth <= inline);\n  }\n\n  _removeListenersAndResetClasses() {\n    this.el.removeEventListener(\"animationend\", this._completeShow);\n    this.el.removeEventListener(\"animationend\", this._completeHide);\n    this.el.removeEventListener(\"webkitAnimationEnd\", this._completeShow);\n    this.el.removeEventListener(\"webkitAnimationEnd\", this._completeHide);\n    removeClasses(this.el, this.openClasses);\n    removeClasses(this.el, this.closingClasses);\n  }\n\n  show(imageURL, triggerWidth, triggerHeight) {\n    this._removeListenersAndResetClasses();\n    this.isShowing = true;\n\n    addClasses(this.el, this.openClasses);\n\n    if (this.imgEl.getAttribute(\"src\") != imageURL) {\n      addClasses(this.el, this.loadingClasses);\n      this.imgEl.addEventListener(\"load\", this._handleLoad);\n      this._setImageURL(imageURL);\n    }\n\n    this._setImageSize(triggerWidth, triggerHeight);\n\n    if (this._isInline) {\n      this._showInline();\n    } else {\n      this._showInContainer();\n    }\n\n    if (this.HAS_ANIMATION) {\n      this.el.addEventListener(\"animationend\", this._completeShow);\n      this.el.addEventListener(\"webkitAnimationEnd\", this._completeShow);\n      addClasses(this.el, this.openingClasses);\n    }\n  }\n\n  _showInline() {\n    this.settings.inlineContainer.appendChild(this.el);\n    addClasses(this.el, this.inlineClasses);\n  }\n\n  _showInContainer() {\n    this.settings.container.appendChild(this.el);\n  }\n\n  hide() {\n    this._removeListenersAndResetClasses();\n    this.isShowing = false;\n\n    if (this.HAS_ANIMATION) {\n      this.el.addEventListener(\"animationend\", this._completeHide);\n      this.el.addEventListener(\"webkitAnimationEnd\", this._completeHide);\n      addClasses(this.el, this.closingClasses);\n    } else {\n      removeClasses(this.el, this.openClasses);\n      removeClasses(this.el, this.inlineClasses);\n    }\n  }\n\n  _completeShow() {\n    this.el.removeEventListener(\"animationend\", this._completeShow);\n    this.el.removeEventListener(\"webkitAnimationEnd\", this._completeShow);\n\n    removeClasses(this.el, this.openingClasses);\n  }\n\n  _completeHide() {\n    this.el.removeEventListener(\"animationend\", this._completeHide);\n    this.el.removeEventListener(\"webkitAnimationEnd\", this._completeHide);\n\n    removeClasses(this.el, this.openClasses);\n    removeClasses(this.el, this.closingClasses);\n    removeClasses(this.el, this.inlineClasses);\n\n    this.el.style.left = \"\";\n    this.el.style.top = \"\";\n\n    // The window could have been resized above or below `inline`\n    // limits since the ZoomPane was shown. Because of this, we\n    // can't rely on `this._isInline` here.\n    if (this.el.parentElement === this.settings.container) {\n      this.settings.container.removeChild(this.el);\n    } else if (this.el.parentElement === this.settings.inlineContainer) {\n      this.settings.inlineContainer.removeChild(this.el);\n    }\n  }\n\n  _handleLoad() {\n    this.imgEl.removeEventListener(\"load\", this._handleLoad);\n    removeClasses(this.el, this.loadingClasses);\n  }\n}\n", "import { isDOMElement } from \"./util/dom\";\nimport injectBaseStylesheet from \"./injectBaseStylesheet\";\n\nimport Trigger from \"./Trigger\";\nimport ZoomPane from \"./ZoomPane\";\n\nexport default class Drift {\n  constructor(triggerEl, options = {}) {\n    this.VERSION = \"1.5.1\";\n    this.triggerEl = triggerEl;\n\n    this.destroy = this.destroy.bind(this);\n\n    if (!isDOMElement(this.triggerEl)) {\n      throw new TypeError(\"`new Drift` requires a DOM element as its first argument.\");\n    }\n\n    // Prefix for generated element class names (e.g. `my-ns` will\n    // result in classes such as `my-ns-pane`. Default `drift-`\n    // prefixed classes will always be added as well.\n    const namespace = options[\"namespace\"] || null;\n    // Whether the ZoomPane should show whitespace when near the edges.\n    const showWhitespaceAtEdges = options[\"showWhitespaceAtEdges\"] || false;\n    // Whether the inline ZoomPane should stay inside\n    // the bounds of its image.\n    const containInline = options[\"containInline\"] || false;\n    // How much to offset the ZoomPane from the\n    // interaction point when inline.\n    const inlineOffsetX = options[\"inlineOffsetX\"] || 0;\n    const inlineOffsetY = options[\"inlineOffsetY\"] || 0;\n    // A DOM element to append the inline ZoomPane to\n    const inlineContainer = options[\"inlineContainer\"] || document.body;\n    // Which trigger attribute to pull the ZoomPane image source from.\n    const sourceAttribute = options[\"sourceAttribute\"] || \"data-zoom\";\n    // How much to magnify the trigger by in the ZoomPane.\n    // (e.g., `zoomFactor: 3` will result in a 900 px wide ZoomPane imag\n    // if the trigger is displayed at 300 px wide)\n    const zoomFactor = options[\"zoomFactor\"] || 3;\n    // A DOM element to append the non-inline ZoomPane to.\n    // Required if `inlinePane !== true`.\n    const paneContainer = options[\"paneContainer\"] === undefined ? document.body : options[\"paneContainer\"];\n    // When to switch to an inline ZoomPane. This can be a boolean or\n    // an integer. If `true`, the ZoomPane will always be inline,\n    // if `false`, it will switch to inline when `windowWidth <= inlinePane`\n    const inlinePane = options[\"inlinePane\"] || 375;\n    // If `true`, touch events will trigger the zoom, like mouse events.\n    const handleTouch = \"handleTouch\" in options ? !!options[\"handleTouch\"] : true;\n    // If present (and a function), this will be called\n    // whenever the ZoomPane is shown.\n    const onShow = options[\"onShow\"] || null;\n    // If present (and a function), this will be called\n    // whenever the ZoomPane is hidden.\n    const onHide = options[\"onHide\"] || null;\n    // Add base styles to the page. See the \"Theming\"\n    // section of README.md for more information.\n    const injectBaseStyles = \"injectBaseStyles\" in options ? !!options[\"injectBaseStyles\"] : true;\n    // An optional number that determines how long to wait before\n    // showing the ZoomPane because of a `mouseenter` event.\n    const hoverDelay = options[\"hoverDelay\"] || 0;\n    // An optional number that determines how long to wait before\n    // showing the ZoomPane because of a `touchstart` event.\n    // It's unlikely that you would want to use this option, since\n    // \"tap and hold\" is much more intentional than a hover event.\n    const touchDelay = options[\"touchDelay\"] || 0;\n    // If true, a bounding box will show the area currently being previewed\n    // during mouse hover\n    const hoverBoundingBox = options[\"hoverBoundingBox\"] || false;\n    // If true, a bounding box will show the area currently being previewed\n    // during touch events\n    const touchBoundingBox = options[\"touchBoundingBox\"] || false;\n    // A DOM element to append the bounding box to.\n    const boundingBoxContainer = options[\"boundingBoxContainer\"] || document.body;\n    // If true, the events related to handleTouch use passive listeners in\n    // order to improve performance for touch devices.\n    const passive = options[\"passive\"] || false;\n\n    if (inlinePane !== true && !isDOMElement(paneContainer)) {\n      throw new TypeError(\"`paneContainer` must be a DOM element when `inlinePane !== true`\");\n    }\n    if (!isDOMElement(inlineContainer)) {\n      throw new TypeError(\"`inlineContainer` must be a DOM element\");\n    }\n\n    this.settings = {\n      namespace,\n      showWhitespaceAtEdges,\n      containInline,\n      inlineOffsetX,\n      inlineOffsetY,\n      inlineContainer,\n      sourceAttribute,\n      zoomFactor,\n      paneContainer,\n      inlinePane,\n      handleTouch,\n      onShow,\n      onHide,\n      injectBaseStyles,\n      hoverDelay,\n      touchDelay,\n      hoverBoundingBox,\n      touchBoundingBox,\n      boundingBoxContainer,\n      passive,\n    };\n\n    if (this.settings.injectBaseStyles) {\n      injectBaseStylesheet();\n    }\n\n    this._buildZoomPane();\n    this._buildTrigger();\n  }\n\n  get isShowing() {\n    return this.zoomPane.isShowing;\n  }\n\n  get zoomFactor() {\n    return this.settings.zoomFactor;\n  }\n\n  set zoomFactor(zf) {\n    this.settings.zoomFactor = zf;\n    this.zoomPane.settings.zoomFactor = zf;\n    this.trigger.settings.zoomFactor = zf;\n    this.boundingBox.settings.zoomFactor = zf;\n  }\n\n  _buildZoomPane() {\n    this.zoomPane = new ZoomPane({\n      container: this.settings.paneContainer,\n      zoomFactor: this.settings.zoomFactor,\n      showWhitespaceAtEdges: this.settings.showWhitespaceAtEdges,\n      containInline: this.settings.containInline,\n      inline: this.settings.inlinePane,\n      namespace: this.settings.namespace,\n      inlineOffsetX: this.settings.inlineOffsetX,\n      inlineOffsetY: this.settings.inlineOffsetY,\n      inlineContainer: this.settings.inlineContainer,\n    });\n  }\n\n  _buildTrigger() {\n    this.trigger = new Trigger({\n      el: this.triggerEl,\n      zoomPane: this.zoomPane,\n      handleTouch: this.settings.handleTouch,\n      onShow: this.settings.onShow,\n      onHide: this.settings.onHide,\n      sourceAttribute: this.settings.sourceAttribute,\n      hoverDelay: this.settings.hoverDelay,\n      touchDelay: this.settings.touchDelay,\n      hoverBoundingBox: this.settings.hoverBoundingBox,\n      touchBoundingBox: this.settings.touchBoundingBox,\n      namespace: this.settings.namespace,\n      zoomFactor: this.settings.zoomFactor,\n      boundingBoxContainer: this.settings.boundingBoxContainer,\n      passive: this.settings.passive,\n    });\n  }\n\n  setZoomImageURL(imageURL) {\n    this.zoomPane._setImageURL(imageURL);\n  }\n\n  disable() {\n    this.trigger.enabled = false;\n  }\n\n  enable() {\n    this.trigger.enabled = true;\n  }\n\n  destroy() {\n    this.trigger._hide();\n    this.trigger._unbindEvents();\n  }\n}\n\n// Public API\n/* eslint-disable no-self-assign */\nObject.defineProperty(Drift.prototype, \"isShowing\", {\n  get: function () {\n    return this.isShowing;\n  },\n});\nObject.defineProperty(Drift.prototype, \"zoomFactor\", {\n  get: function () {\n    return this.zoomFactor;\n  },\n  set: function (value) {\n    this.zoomFactor = value;\n  },\n});\nDrift.prototype[\"setZoomImageURL\"] = Drift.prototype.setZoomImageURL;\nDrift.prototype[\"disable\"] = Drift.prototype.disable;\nDrift.prototype[\"enable\"] = Drift.prototype.enable;\nDrift.prototype[\"destroy\"] = Drift.prototype.destroy;\n/* eslint-enable no-self-assign */\n"],
  "mappings": "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",
  "names": ["HAS_DOM_2", "HTMLElement", "isDOMElement", "obj", "nodeType", "nodeName", "addClasses", "el", "classNames", "forEach", "className", "classList", "add", "removeClasses", "remove", "RULES", "document", "querySelector", "styleEl", "createElement", "type", "classList", "add", "appendChild", "createTextNode", "head", "insertBefore", "firstChild", "Error", "BoundingBox", "options", "isShowing", "namespace", "zoomFactor", "throwIfMissing", "containerEl", "settings", "openClasses", "_buildClasses", "_buildElement", "suffix", "classes", "ns", "push", "el", "document", "createElement", "addClasses", "zoomPaneWidth", "zoomPaneHeight", "appendChild", "style", "width", "Math", "round", "height", "removeChild", "removeClasses", "percentageOffsetX", "percentageOffsetY", "triggerRect", "pageXOffset", "window", "pageYOffset", "inlineLeft", "left", "clientWidth", "inlineTop", "top", "clientHeight", "Trigger", "options", "_classCallCheck", "_show", "bind", "_hide", "_handleEntry", "_handleMovement", "el", "throwIfMissing", "zoomPane", "sourceAttribute", "handleTouch", "onShow", "onHide", "hoverDelay", "touchDelay", "hoverBoundingBox", "touchBoundingBox", "namespace", "zoomFactor", "boundingBoxContainer", "passive", "settings", "boundingBox", "BoundingBox", "containerEl", "enabled", "_bindEvents", "event", "preventDefault", "_isTouchEvent", "isShowing", "touches", "addEventListener", "isPassive", "_preventDefault", "removeEventListener", "e", "_preventDefaultAllowTouchScroll", "_lastMovement", "type", "entryTimeout", "setTimeout", "show", "getAttribute", "clientWidth", "clientHeight", "touchActivated", "clearTimeout", "hide", "movementX", "movementY", "firstTouch", "clientX", "clientY", "rect", "getBoundingClientRect", "offsetX", "left", "offsetY", "top", "percentageOffsetX", "percentageOffsetY", "setPosition", "ZoomPane", "options", "_classCallCheck", "HAS_ANIMATION", "document", "divStyle", "createElement", "style", "_completeShow", "bind", "_completeHide", "_handleLoad", "isShowing", "container", "zoomFactor", "throwIfMissing", "inline", "namespace", "showWhitespaceAtEdges", "containInline", "inlineOffsetX", "inlineOffsetY", "inlineContainer", "body", "settings", "openClasses", "_buildClasses", "openingClasses", "closingClasses", "inlineClasses", "loadingClasses", "_buildElement", "suffix", "classes", "ns", "push", "el", "addClasses", "loaderEl", "appendChild", "imgEl", "imageURL", "setAttribute", "triggerWidth", "triggerHeight", "width", "height", "percentageOffsetX", "percentageOffsetY", "triggerRect", "imgElWidth", "offsetWidth", "imgElHeight", "offsetHeight", "elWidth", "elHeight", "centreOfContainerX", "centreOfContainerY", "targetImgXToBeCentre", "targetImgYToBeCentre", "left", "top", "differenceBetweenContainerWidthAndImgWidth", "differenceBetweenContainerHeightAndImgHeight", "isContainerLargerThanImgX", "isContainerLargerThanImgY", "minLeft", "minTop", "maxLeft", "maxTop", "parentElement", "scrollX", "window", "pageXOffset", "scrollY", "pageYOffset", "inlineLeft", "inlineTop", "transform", "webkitTransform", "removeEventListener", "removeClasses", "_removeListenersAndResetClasses", "getAttribute", "addEventListener", "_setImageURL", "_setImageSize", "_isInline", "_showInline", "_showInContainer", "removeChild", "innerWidth", "Drift", "triggerEl", "options", "_classCallCheck", "VERSION", "destroy", "bind", "isDOMElement", "TypeError", "namespace", "showWhitespaceAtEdges", "containInline", "inlineOffsetX", "inlineOffsetY", "inlineContainer", "document", "body", "sourceAttribute", "zoomFactor", "paneContainer", "undefined", "inlinePane", "handleTouch", "onShow", "onHide", "injectBaseStyles", "hoverDelay", "touchDelay", "hoverBoundingBox", "touchBoundingBox", "boundingBoxContainer", "passive", "settings", "injectBaseStylesheet", "_buildZoomPane", "_buildTrigger", "zoomPane", "ZoomPane", "container", "inline", "trigger", "Trigger", "el", "imageURL", "_setImageURL", "enabled", "_hide", "_unbindEvents", "isShowing", "zf", "boundingBox", "Object", "defineProperty", "Drift", "prototype", "get", "isShowing", "zoomFactor", "set", "value", "setZoomImageURL", "disable", "enable", "destroy"]
}
